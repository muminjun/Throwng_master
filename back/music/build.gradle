plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '6.16.0'
}

group = 'com.sieum'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.9")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
<<<<<<< HEAD
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
=======
<<<<<<< HEAD
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
=======
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
>>>>>>> d2d646a48abd6bbf6a4972f6c0e6371a02cad312

	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	runtimeOnly 'com.mysql:mysql-connector-j'
<<<<<<< HEAD
=======
>>>>>>> ba89da3ff349afec5bb62d148d7a6e24d4604ae2
>>>>>>> d2d646a48abd6bbf6a4972f6c0e6371a02cad312
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		target("**/*.java")
		targetExclude("**/SecurityConfig.java", "**/SwaggerConfiguration.java", "**/generated/**")
		googleJavaFormat().aosp()
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
